<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="es" xml:lang="es" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<head>
<META http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>Glossary - Methodology for the Dynamic Evolution of Context-Aware Systems</title>
</head>
<body text="#000000" bgcolor="#ffffff">
<font face="Arial, Helvetica, sans-serif">
<dl>
<dt>
<b><a id="_GLOSSARY_ITEM_C" name="C">C</a></b>
</dt>
<dd></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_context" name="context">Context</a></b>
</dt>
<dd><p>     The context is any information that can be used to characterize the situation of an entity [1]. </p> <p>     <strong>References</strong> </p> <ol>     <li>         Dey AK (2001) Understanding and using context. Personal Ubiquitous Comput 5:4–7     </li> </ol></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_E" name="E">E</a></b>
</dt>
<dd></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_evolution_policy" name="evolution_policy">Evolution Policies</a></b>
</dt>
<dd><p align="left">     Evolution&nbsp;policies change the behavior of the system during execution. They indicate the activation or     deactivation of <a  class="elementLinkWithUserText" href="#feature" guid="_z-VUQIRiEeGKKYeBKrymEg" >features</a> (i.e., evolution actions) in the evolved <a  class="elementLink" href="../dynamic_evolution/workproducts/Variability_Model_EFFA22FD.html" guid="_5oOtUIOkEeGjT6xUMMxnjA" >Variability Model</a> according to&nbsp;a triggered <a  class="elementLinkWithUserText" href="#tactic" guid="_uBEDEKfZEeGiUZa-TbXCrQ" >tactic</a>. </p></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_F" name="F">F</a></b>
</dt>
<dd></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_feature" name="feature">Feature</a></b>
</dt>
<dd><p align="left">     Logical units of behaviors that are specified by a set of functional and non-functional requirements [1]. </p> <p align="left">     <strong>References</strong> </p> <ol>     <li>         <p align="left">             Bosch J (2000) Design and use of software architectures: adopting and evolving a product-line approach. ACM             Press/Addison-Wesley Publishing Co., New York, NY, USA         </p>     </li> </ol></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_feature_model" name="feature_model">Feature Model</a></b>
</dt>
<dd><p>     A feature model is a hierarchically arranged set of&nbsp;<a  class="elementLinkWithUserText" href="#feature" guid="_z-VUQIRiEeGKKYeBKrymEg" >features</a> [1]. This model can implement the <a  class="elementLink" href="../dynamic_evolution/workproducts/Variability_Model_EFFA22FD.html" guid="_5oOtUIOkEeGjT6xUMMxnjA" >Variability Model</a>. </p> <p>     The categories of parental relationships between a feature and its subfeatures can be: 1) <strong>And</strong>: all     subfeatures must be selected; 2) <strong>Alternative</strong>: only one subfeature can be selected; 3)     <strong>Or</strong>: one or more subfeatures can be selected; 4) <strong>Mandatory</strong>: required features; and 5)     <strong>Optional</strong>: optional features. In addition, there are two cross-tree constraints: 1)     <strong>Requires</strong>: the selection of a feature implies the selection of another feature; 2)     <strong>Excludes</strong>: feature X and feature Y cannot be chosen together. See Figure 1. </p> <p>     <img style="WIDTH: 834px; HEIGHT: 131px" alt="" src="./../dynamic_evolution/guidances/termdefinitions/./resources/FeatureModelElements.jpg" width="600" height="141" /> </p> <p>     <font size="1"><strong>Figure 1.</strong> Relationships among features.</font> </p> <p>     A feature diagram is a graphical representation of a feature model. In a feature diagram, there is only one root     feature on which all the other features depend, and primitive features are the leaves and compound features are the     interior nodes. See Figure 2. </p> <p>     <img alt="" src="./../dynamic_evolution/guidances/termdefinitions/./resources/FeatureModelExample.jpg" width="343" height="220" /> </p> <p>     <font size="1"><strong>Figure 2.</strong> Feature&nbsp;diagram example.</font> </p> <p>     <strong>References</strong> </p> <ol>     <li>         <p align="left">             Batory D (2005) Feature models, grammars, and propositional formulas. In: Software Product Lines Conference,             Springer–Verlag, Springer–Verlag, Lecture Notes in Computer Sciences, vol 3714, p 7–20         </p>     </li> </ol></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_T" name="T">T</a></b>
</dt>
<dd></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_tactic" name="tactic">Tactic</a></b>
</dt>
<dd>Tactics are considered as last surviving resorts to be used when the system does not have predefined adaptation actions to deal with arising problematic context events. Writing complex scripts to specify tactics can be cumbersome. On the other hand, highly-abstract tactic models can be used to express the tactical functionality to be triggered on the underlying system to preserve affected requirements (one requirement can be preserved by many tactics).</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_V" name="V">V</a></b>
</dt>
<dd></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_variant" name="variant">Variant</a></b>
</dt>
<dd><p>     Representations of variability objects within domain artifacts [1]. </p> <p>     <strong>References</strong> </p> <ol>     <li>         Pohl K, Böckle G, Linden FJvd (2005) Software Product Line Engineering: Foundations, Principles and Techniques.         Springer-Verlag New York, Inc., Secaucus, NJ, USA     </li> </ol></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_variation_point" name="variation_point">Variation Point</a></b>
</dt>
<dd><p align="left">     Variation points express variability subjects (i.e., variable items of the real world or variable properties of such     items) within domain artifacts that are enriched by contextual information [1]. </p> <p align="left">     <strong>References</strong> </p> <ol>     <li>         <p align="left">             Pohl K, Böckle G, Linden FJvd (2005) Software Product Line Engineering: Foundations, Principles and Techniques.             Springer-Verlag New York, Inc., Secaucus, NJ, USA         </p>     </li> </ol></dd>
</dl>
</font>
</body>
</html>
